generator client {
  provider = "prisma-client-js"
  output   = "./generated"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  admin
  student
  instructor
}

model User {
  id                       Int       @id @default(autoincrement())
  email                    String    @unique
  username                 String?   @unique
  password                 String?
  role                     Role
  googleId                 String?   @unique
  firstName                String?
  lastName                 String?
  avatarUrl                String?
  isVerified               Boolean   @default(false)
  resetPasswordToken       String?
  resetPasswordTokenExpiry DateTime?
  enrolledAt               DateTime  @default(now())
  updatedAt                DateTime  @updatedAt

  refreshToken RefreshToken[]

  studentProfile    StudentProfile?    @relation("StudentUserProfile")
  instructorProfile InstructorProfile? @relation("InstructorUserProfile")
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  expiresAt DateTime
  createdAt DateTime @default(now())
}

model Otp {
  id        Int      @id @default(autoincrement())
  email     String
  code      String
  expiresAt DateTime
  createdAt DateTime @default(now())
}

model StudentProfile {
  id         Int      @id @default(autoincrement())
  studentId  Int      @unique
  profilePic String?
  full_name  String?
  bio        String?
  phone      String?
  address    String?
  updatedAt  DateTime @updatedAt

  student User @relation("StudentUserProfile", fields: [studentId], references: [id])
}

model InstructorProfile {
  id           Int      @id @default(autoincrement())
  instructorId Int      @unique
  full_name    String?
  bio          String?
  expertise    String?
  profilePic   String?
  updatedAt    DateTime @updatedAt

  instructor User @relation("InstructorUserProfile", fields: [instructorId], references: [id])
}
